name: Chats
methods:
  - name: get_chat_groups
    summary: List Chat Groups
    description: |
        Lists chat groups.

        If user A sends chat message to user B and C, users A, B and C automatically
        form a chat group. Use this API to get a list of chat groups the current user
        belongs to.

    url: chats/get_chat_groups.json
    login-required: true

    parameters:

      - name: page
        description: Request page number, default is 1.
        type: Number

      - name: per_page
        description: Number of results per page, default is 10.
        type: Number

      - name: where
        description: |
            Constraint values for fields. `where` should be encoded JSON.

            If `where` is not specified, `query` returns all objects.
            See the [Search and Query guide](#!/guide/search_query) for more information.
        type: String

      - name: order
        description: |
            Sort results by one or more fields.
            See the [Search and Query guide](#!/guide/search_query) for more information.
        type: String

      - name: response_json_depth
        description: |
            Nested object depth level counts in JSON response.
            To reduce server API calls the JSON response may
            include, in addition to the objects returned by the query, other important data related 
            to the returned objects, such as object's owner or referencing objects.

            Default is 3, valid range is 1 to 8.
        type: Number

      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean
        

    response-parameters:
      - name: chat_groups
        description: |
            List of chat groups. Each chat group entry has the following fields:

            *   `id`. ID of the chat group.

            *   `created_at`. Timestamp when the first message in the chat group was sent.

            *   `updated_at`.  Timestamp of the most recent message in the chat group.

            *   `participate_users`. List of {@link Users} objects for the users in the
                 chat group.
        type: Array<Hash>

    examples:
      - platform: titanium
        example: |
            This example requests a lists of chat groups that the current user belongs to and checks
            the response.

                Cloud.Chats.getChatGroups(function (e) {
                    if (e.success) {
                        for (var i = 0; i < e.chat_groups.length; i++) {
                            var group = e.chat_groups[i];
                            alert('Success:\n' +
                                'id: ' + group.id + '\n' +
                                'created_at: ' + group.created_at + '\n' +
                                'number of users: ' + group.participate_users.length);
                        }
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                Get a list of chat groups the current user belongs to, sorted by groups with most recent activity first.
                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/chats/get_chat_groups.json?order=-updated_at&key=<YOUR APP APP KEY>&pretty_print=true"

            Example JSON response:

                {
                  "meta": {
                    "code": 200,
                    "status": "ok",
                    "method_name": "getChatGroups",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1,
                    "total_results": 3
                  },
                  "response": {
                    "chat_groups": [
                      {
                        "id": "4ee04f4dd9ca72680d000009",
                        "created_at": "2011-12-08T05:46:53+0000",
                        "updated_at": "2011-12-08T05:46:53+0000",
                        "participate_users": [
                          {
                            "id": "4ee04f4cd9ca72680d000002",
                            "first_name": "Bob",
                            "last_name": "Dude",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "bob",
                            "email": "bob@dude.com"
                          },
                          {
                            "id": "4ee04f4cd9ca72680d000003",
                            "first_name": "Alice",
                            "last_name": "Gal",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "alice",
                            "email": "alice@gal.com"
                          }
                        ]
                      },
                      {
                        "id": "4ee04f4dd9ca72680d000017",
                        "created_at": "2011-12-08T05:46:53+0000",
                        "updated_at": "2011-12-08T05:46:53+0000",
                        "participate_users": [
                          {
                            "id": "4ee04f4cd9ca72680d000002",
                            "first_name": "Bob",
                            "last_name": "Dude",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "bob",
                            "email": "bob@dude.com"
                          },
                          {
                            "id": "4ee04f4cd9ca72680d000003",
                            "first_name": "Alice",
                            "last_name": "Gal",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "alice",
                            "email": "alice@gal.com"
                          },
                          {
                            "id": "4ee04f4cd9ca72680d000004",
                            "first_name": "Joe",
                            "last_name": "Guy",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "joe",
                            "email": "joe@guy.com"
                          }
                        ]
                      },
                      {
                        "id": "4ee04f4dd9ca72680d000012",
                        "created_at": "2011-12-08T05:46:53+0000",
                        "updated_at": "2011-12-08T05:46:53+0000",
                        "participate_users": [
                          {
                            "id": "4ee04f4cd9ca72680d000002",
                            "first_name": "Bob",
                            "last_name": "Dude",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "bob",
                            "email": "bob@dude.com"
                          },
                          {
                            "id": "4ee04f4cd9ca72680d000004",
                            "first_name": "Joe",
                            "last_name": "Guy",
                            "created_at": "2011-12-08T05:46:52+0000",
                            "updated_at": "2011-12-08T05:46:52+0000",
                            "external_accounts": [

                            ],
                            "username": "joe",
                            "email": "joe@guy.com"
                          }
                        ]
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS APS SDK call:

                [APSChats getChatGroups:nil withBlock:^(APSResponse *e) {
                    if (e.success) {
                        NSString *message = [NSString stringWithFormat:@"Found %lu groups", (unsigned long)((NSArray *) e.response[@"chat_groups"]).count ];
                        [[[UIAlertView alloc] initWithTitle:@"Success" message:message delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                    } else {
                        [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                    }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:3];
                [paramDict setObject:"-updated_at" forKey:@"order"]; // optional
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"GET" baseUrl:@"chats/get_chat_groups.json"  paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.methodName isEqualToString:@"getChatGroups"]) {
                		NSArray *chat_groups = [response getObjectsOfType:[CCChatGroup class]];
                		...
                	}
                }

      - platform: android
        example: |
            Example Android APS SDK call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');

                try {
                    APSChats.getChatGroups(null, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            if (e.getSuccess()) {
                                try {
                                    JSONObject chat_groups = e.getResponse().getJSONArray("chat_groups");
                                    // Do something with the chat_groups array
                                } catch (JSONException err) {
                                    Log.e("APSChats", "Exception thrown: " + err.toString())
                                }
                            } else {
                                Log.e("APSChats", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(APSCloudException e) {
                            Log.e("APSChats", "Exception thrown: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSChats", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                CCResponse response = sdk.sendRequest("chats/get_chat_groups.json", CCRequestMethod.GET, null);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "getChatGroups".equals(meta.getMethod())) {
                  JSONArray chatGroups = responseJSON.getJSONArray("chat_groups");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                sdk.sendRequest('chats/get_chat_groups.json', 'GET', null, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'getChatGroups') {
                        var chatGroups = data.response.chat_groups;
                      	...
                      }
                    }
                  }
                }

