name: PushNotifications
methods:
  - name: set_badge
    summary: set_badge
    description: |
        Sets the value of the internally stored value of the badge.

        This method only updates the internally stored value of the badge.  To update the badge value
        on the iOS icon or Android notification center, send a push notification with the `badge` field defined.
    url: push_notification/set_badge.json
    http-method: PUT

    parameters: 

      - name: device_token
        description: | 
            Device token. Required if you are not an application admin.
        type: String

      - name: badge_number
        description: |
            Number to set as the badge on the application's icon.
            You can also specify postive and negative values with the `+` and `-`
            symbols to increment or decrement the current badge number, respectively.
        type: Number
      
    examples:
      - platform: titanium
        example: |
            This API is not yet supported in the `ti.cloud` module.
    
      - platform: rest
        example: |
            Example cURL request:
            
                $ curl -b cookies.txt -c cookies.txt -X PUT -F "badge_number=12" "https://api.cloud.appcelerator.com/v1/push_notification/set_badge.json?key=<API_KEY>"

            Example JSON response:
            
                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "setBadge"
                  }
                }
                
      - platform: ios
        example: |
            Example iOS call:
            
                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"12" forKey:@"badge_number"]; 
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"PUT" baseUrl:@"push_notification/set_badge.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	// successfully call
                }
                
      - platform: android
        example: |
            Example Android call:
            
                Cocoafish sdk = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //Cocoafish sdk = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("badge_number", 12);
                CCResponse response = sdk.sendRequest("push_notification/set_badge.json", CCRequestMethod.PUT, data);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "setBadge".equals(meta.getMethod())) {
                }

