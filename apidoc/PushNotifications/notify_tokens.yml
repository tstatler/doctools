name: PushNotifications
methods:
  - name: notify_tokens
    summary: notify_tokens
    description: |
        Sends push notifications to one or more users who are subscribed to a channel.
    url: push_notification/notify_tokens.json
    http-method: POST
    login-required: false

    parameters: 

      - name: channel
        description: Name of the channel.
        type: String
        required: true
      
      - name: to_tokens
        description: |
            Comma-separated list of device tokens. Sends push notification to the specified
            tokens who are subscribed to the specified channel.  
        type: String
        required: true

      - name: payload
        description: |
            Payload to send with the push notification.

            If it is a string, it will be sent as an alert. You can also specify a JSON
            payload with custom values. For example:

                {
                    "atras": "your_user_id",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "badge": 2,
                    "sound": "default",
                    "alert" : "Push Notification Test"
                }
    
            In the above example, key `atras` and `tags` are custom payloads. 
            `"badge" : 2`
            puts a badge with the value 2 on the app's icon, `"sound" : "default"` plays a
            default system sound and `"alert" : "Push Notification Test"` pops up a
            alert window with text "Push Notification Test".  
            
            Note: For Android app, there are 3 more predefined keywords you can use,
            please refer to Push Notifications in the [Android SDK guide](#!/guide/android) for more
            details.
        type: [String, Hash]
        required: true

      - name: expire_after_seconds
        description: |
            Expiration time in seconds of when to stop sending the push notification.

            For example, if the push notification expiration time is for a day and the user's device
            is off for over a day, the user does not receive the push notification since it has expired.
        type: Number

    examples:

      - platform: titanium
        example: |
            This example sends a push notification to a channel and checks the response.
            Requires Titanium SDK 3.1.2 and later.
            
                Cloud.PushNotifications.notifyTokens({
                    channel: 'friend_request',
                    to_tokens: TOKEN_LIST,
                    payload: 'Welcome to push notifications'
                }, function (e) {
                    if (e.success) {
                        alert('Success');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });
    
      - platform: rest
        example: |
            Example cURL request:
            
                curl -X POST -F "channel=<channel>" -F "to_tokens=<token list>" -F "payload=<payload>" "https://api.cloud.appcelerator.com/v1/push_notification/notify_tokens.json?key=<key>"

            Example JSON response:
            
                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "NotifyTokens"
                  }
                }
                
      - platform: ios
        example: |
            Example iOS call:
            
                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:3];
                [paramDict setObject:@"friend_request" forKey:@"channel"]; 
                [paramDict setObject:@"DEVICE_TOKEN1" forKey:@"to_tokens[]"]; 
                [paramDict setObject:@"DEVICE_TOKEN2" forKey:@"to_tokens[]"]; 
                [paramDict setObject:@"Welcome to push notifications" forKey:@"payload"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"POST" baseUrl:@"push_notification/notify_tokens.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	// successfully subscribed
                }
                
      - platform: android
        example: |
            Example Android call:
            
                Cocoafish sdk = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //Cocoafish sdk = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("channel", "friend_request");
                data.put("to_tokens", TOKEN_LIST);
                data.put("payload", "Push Notification Test");
                CCResponse response = sdk.sendRequest("push_notification/notify_tokens.json", CCRequestMethod.POST, data);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "NotifyTokens".equals(meta.getMethod())) {
                  ...
                }

