name: PushNotifications
methods:
  - name: reset_badge_put
    summary: reset_badge
    description: |
        Sets the internally stored value of the badge to zero of a specific device.

        This method only updates the internally stored value of the badge.  To update the badge value
        on the iOS icon or Android notification center, send a push notification with the `badge` field defined.

        If you are an application admin, you can also use the
        [GET version](#!/api/PushNotifications-method-reset_badge_get) of this method.
    url: push_notification/reset_badge.json
    http-method: PUT

    parameters: 

      - name: device_token
        description: | 
            Device token.
        type: String
        required: true
      
    examples:
      - platform: titanium
        example: |
            Requires Titanium SDK 3.2.1 and later.

                Cloud.PushNotifications.resetBadge({
                    device_token: device_token.value
                }, function (e) {
                    if (e.success) {
                        Ti.API.info('Badge Reset!');
                    }
                    else {
                        Ti.API.error(e);
                    }
                });

      - platform: rest
        example: |
            Example cURL request:
            
                $ curl -b cookies.txt -c cookies.txt -X PUT -F "device_token=<device_token>" "https://api.cloud.appcelerator.com/v1/push_notification/reset_badge.json?key=<API_KEY>"

            Example JSON response:
            
                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "resetBadge"
                  }
                }
                
      - platform: ios
        example: |
            Example iOS APS SDK call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                    @"device_token": deviceToken
                };

                [APSPushNotifications resetBadge:data withBlock:^(APSResponse *e) {
                      if (e.success) {
                          [[[UIAlertView alloc] initWithTitle:@"Great" message:@"Success!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      } else {
                          [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"<device_token>" forKey:@"device_token"]; 
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"PUT" baseUrl:@"push_notification/reset_badge.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	// successfully call
                }

      - platform: android
        example: |
            Example Android call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("device_token", "<device_token>");

                try {
                    APSPushNotifications.resetBadge(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {

                            if (e.getSuccess()) {
                                Log.i("APSPushNotifications", "Badge Reset!");
                            } else {
                                Log.e("APSPushNotifications", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(final APSCloudException e) {
                            Log.e("APSPushNotifications", "Exception throw: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSPushNotifications", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:
            
                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("device_token", "<device_token>");
                CCResponse response = sdk.sendRequest("push_notification/reset_badge.json", CCRequestMethod.PUT, data);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "resetBadge".equals(meta.getMethod())) {
                }

