name: PushNotifications
methods:
  - name: channels_query
    summary: Channels Query
    description: |
        Returns a list of push notification channels the user is subscribed to.

        For application admins, if the `user_id` parameter is not specified, returns all channels
        with subscribed users.
    url: push_notification/channels/query.json
    login-required: true

    parameters:

      - name: user_id
        description: |
            User to retrieve subscribed channels for.

            Only application admins can query subscribed channels of a user.
        type: String

      - name: page
        description: Request page number, default is 1.
        type: Number

      - name: per_page
        description: Number of results per page, default is 10.
        type: Number
        
      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean

    response-parameters:
      - name: push_channels
        description: |
            List of subscribed channels.
        type: Array<String>

    examples:
      - platform: titanium
        example: |

            Requires Release 3.2.0.

                Cloud.PushNotifications.queryChannels({
                    user_id: savedUserId
                }, function (e) {
                    if (e.success) {
                        Ti.API.info("channel: " + e.push_channels.join());
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/push_notification/channels/query.json?key=<YOUR APP API KEY>"

            Example JSON response:

                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "queryPushChannels",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1,
                    "total_results" : 2
                  },
                  "response": {
                    "push_channels": [
                      "friend_request",
                      "chat"
                    ]
                  }
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                CCResponse response = sdk.sendRequest("push_notification/channels/query.json", CCRequestMethod.GET, null);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "queryPushChannels".equals(meta.getMethod())) {
                  JSONArray channels = responseJSON.getJSONArray("push_channels");
                  ...
                }

      - platform: ios
        example: |
            Example iOS APS SDK call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                    @"user_id": savedUserId
                };
                
                [APSPushNotifications queryChannels:data withBlock:^(APSResponse *e) {
                      if (e.success) {
                          NSString *message = [NSString stringWithFormat:@"Found %lu push_channels", (unsigned long)((NSArray *) e.response[@"push_channels"]).count ];
                          [[[UIAlertView alloc] initWithTitle:@"Success" message:message delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      } else {
                          [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                CCRequest *request = [[[CCRequest alloc] initWithDelegate:self httpMethod:@"GET" baseUrl:@"push_notification/channels/query.json" ] autorelease];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {

                }

