name: Users
methods:
  - name: show
    summary: Show User Profile
    description: |
        Shows public user information. For private information about the currently
        logged in user, see {@link Users#show_me Show Logged In User Info}.
    url: users/show.json
    login-required: false

    parameters:
      - name: user_id
        description: |
            User ID of the user to show. Either `user_id` or `user_ids` must be specified.
        type: String

      - name: user_ids
        description: |
            Comma-separated list of user IDs to show. Either `user_id` or `user_ids` must be specified.
        type: String

      - name: response_json_depth
        description: |
            Nested object depth level counts in response json.

            In order to reduce server API calls from an applicaton, the response json may
            include not just the objects that are being queried/searched, but also with
            some important data related to the returning objects such as object's owner or
            referencing objects.

            Default is 3, valid range is 1 to 8.
        type: Number
        optional: true

      - name: show_user_like
        description: | 
            If set to **true** the User object in the response will include `"current_user_liked: true"`
            if the current user has liked the object. If the user has not liked the object, the 
            `current_user_liked` field is not included in the response.
        type: Boolean   

    response-parameters:
      - name: users
        description: List of user profiles.
        type: Array<Users>

    examples:
      - platform: titanium
        example: |
            This example requests information about a user and checks the response.

                Cloud.Users.show({
                    user_id: savedUserInfo.id
                }, function (e) {
                    if (e.success) {
                        var user = e.users[0];
                        alert('Success:\n' +
                            'id: ' + user.id + '\n' +
                            'first name: ' + user.first_name + '\n' +
                            'last name: ' + user.last_name);
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/users/show.json?key=<YOUR APP APP KEY>&user_id=4d6e77386f70950c89000001"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"showUsers"
                  },
                  "response": {
                    "users": [
                      {
                	      "id":"4d6e77386f70950c89000001",
                	      "first_name":"Michael",
                	      "last_name":"Goff",
                	      "created_at":"2011-03-02T16:58:32+0000",
                	      "updated_at":"2011-03-02T17:18:44+0000",
                				"photo": {
                		      "id":"4dcf0cefd0afbe017a000061",
                		      "filename":"photo.jpg",
                		      "size":584344,
                		      "md5":"589b8ad43ed20bf8e622d719642bc939",
                		      "created_at":"2011-05-14T23:14:55+0000",
                		      "updated_at":"2011-05-14T23:15:05+0000",
                		      "processed":true,
                		      "content_type":"image/jpeg",
                		      "urls": {
                			      "square_75":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_square_75.jpg",
                			      "thumb_100":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_thumb_100.jpg",
                			      "small_240":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_small_240.jpg",
                			      "medium_500":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_medium_500.jpg",
                			      "medium_640":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_medium_640.jpg",
                			      "large_1024":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_large_1024.jpg",
                			      "original":"http://storage.appcelerator.com/4dc5d024d0afbe0aec000011/photos/4dcf0cefd0afbe017a000061/photo_original.jpg"
                		      }
                				}
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            In the following example the value of the APSResponse object's `responseString` property 
            is displayed in a UITextView object. The callback block runs on a separate thread, so you 
            must switch to the main thread before interacting with the UI.

                NSDictionary *data = @{@"user_id": self.userId};
                
                [APSUsers show:data withBlock:^(APSResponse *e) {
                    if (e.success) {
                        [[NSOperationQueue mainQueue] addOperationWithBlock:^{
                            self.textView.text = e.responseString;
                        }];
                    } else {
                        [[[UIAlertView alloc] initWithTitle:@"Error" message:e.message delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                    }
                }];

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("user_id", "4d6e77386f70950c89000001");
                CCResponse response = sdk.sendRequest("users/show.json", CCRequestMethod.GET, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "showUsers".equals(meta.getMethod())) {
                  JSONArray users = responseJSON.getJSONArray("users");
                  JSONObject user = users.getJSONObject(0);

                  StringBuffer sb = new StringBuffer();
                  sb.append("Create user successful!\n");
                  sb.append("id:" + user.getString("id") + "\n");
                  sb.append("first name:" + user.getString("first_name") + "\n");
                  sb.append("last name:" + user.getString("last_name") + "\n");
                  sb.append("email:" + user.getString("email") + "\n");
                  System.out.println(sb.toString());
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  user_id: '4d6e77386f70950c89000001'
                };
                sdk.sendRequest('users/show.json', 'GET', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'showUsers') {
                        var message = '';
                        var user = data.response.users[0];
                        message += 'Get user profile successful!\n';
                        message += 'id:' + user.id + '\n';
                        message += 'first name:' + user.first_name + '\n';
                        message += 'last name:' + user.last_name + '\n';
                        message += 'email:' + user.email + '\n';
                        alert(message);
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.user_id = "4d6e77386f70950c89000001";
                sdk.sendRequest("users/show.json", URLRequestMethod.GET, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "showUsers") {
                        var message:String = "";
                        var user:Object = data.response.users[0];
                        message += "Get user profile successful!\n";
                        message += "id:" + user.id + "\n";
                        message += "first name:" + user.first_name + "\n";
                        message += "last name:" + user.last_name + "\n";
                        message += "email:" + user.email + "\n";
                        Alert.show(message);
                      }
                    }
                  }
                }

