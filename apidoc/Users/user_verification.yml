name: Users
methods:
  - name: resend_confirmation
    summary: Re-send user email verification.
    description: |
        If you enabled new user account email verification in your App settings, all
        new users will receive an email containing instructions to activate their
        account. You can use this API to re-send user verification email.

    url: users/resend_confirmation.json

    parameters:
      - name: email
        description: Email must match user's registered email.
        type: String
        required: true

      - name: confirmation_subject
        description: |
            The default subject of the email verification is "Email Verification
            Instructions for {{your app name}}". If you wish to have your custom email
            subject, you can provide it by setting the `confirmation_subject` parameter.
        type: String

      - name: confirmation_template
        description: |
            If you wish to use your custom email body. You can create a email template and
            pass the template name. Your email template must contain the following URL to
            allow users to be redirected to Appcelerator Cloud Services email verification page:

                https://cloud.appcelerator.com/users/confirmation?key={{key}}&confirmation;_token={{confirmation_token}}

            If you have your own website that talks to Appcelerator Cloud Services backend
            and wish to use custom URL, you must provide a URL with the following format:

                https://[your_url.com]/[your_method]?key={{key}}&confirmation;_token={{confirmation_token}}

            When a user visits the above URL, you make a call to Appcelerator Cloud
            Services to confirm the user internally from your web server:

                GET https://api.cloud.appcelerator.com/v1/users/confirm_user.json?confirmation_token={{confirmation_token}}&key;=<Your App Key>
    examples:
      - platform: titanium
        example: |
            The following example re-sends a verification email to the user's registered email.
            If the reset request is successful, an alert dialog is displayed asking the user to check their email; otherwise, an error is generated.  Available as a Titanium API since release 3.2.0.

                Cloud.Users.resendConfirmation({
                    email: email.value
                }, function (e) {
                    if (e.success) {
                        alert('Please check your email!');
                        email.value = '';
                    }
                    else {
                        error(e);
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/users/resend_confirmation.json?key=<YOUR APP APP KEY>&email=foo@foo.com"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"resendConfirmation"
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"foo@foo.com" forKey:@"email"];
                CCRequest *request = [[[CCRequest alloc] httpMethod:@"GET" initWithDelegate:self baseUrl:@"users/resend_confirmation.json" paramDict:nil] autorelease];
                [request startAsynchronous];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                  if ([response.meta.method isEqualToString:@"resendConfirmation"]) {
                    NSLog(@"User verification email sent!");
                  }
                }

      - platform: android
        example: |
            Example Android call:

                APSCloud.enable(this, 'APS_CLOUD_KEY');
                final Activity currentActivity = this;

                HashMap<String, Object> data = new HashMap<String, Object>();
                data.put("email", "foo@foo.com");

                try {
                    APSUsers.resendConfirmation(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            // The callback will be run on a background thread
                            // Switch to the main thread before interacting with the UI
                            if (currentActivity != null) {
                                currentActivity.runOnUiThread(new Runnable() {
                                    public void run() {
                                        if (e.getSuccess()) {
                                            new AlertDialog.Builder(currentActivity)
                                            .setTitle("Success").setMessage("Please check your email!")
                                            .setPositiveButton(android.R.string.ok, null)
                                            .setIcon(android.R.drawable.ic_dialog_info)
                                            .show();
                                        } else {
                                            Log.e("APSUsers", "ERROR: " + e.getMessage());
                                        }
                                    }
                                });
                            }
                        }
                    });
                } catch (APSClientError e) {
                    Log.e("APSUsers", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("email", "foo@foo.com");
                CCResponse response = sdk.sendRequest("users/resend_confirmation.json", CCRequestMethod.GET, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "resendConfirmation".equals(meta.getMethod())) {
                  System.out.println("User verification email sent!");
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  email: 'foo@foo.com'
                };
                sdk.sendRequest('users/resend_confirmation.json', 'GET', data, false, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok'
                          && meta.code == 200
                          && meta.method_name == 'resendConfirmation') {
                        alert('User verification email sent!');
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                var data:Object = new Object();
                data.email = "foo@foo.com";
                sdk.sendRequest("users/resend_confirmation.json", URLRequestMethod.GET, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok"
                          && meta.code == 200 &&
                          meta.method_name == "resendConfirmation") {
                        Alert.show("User verification email sent!");
                      }
                    }
                  }
                }

