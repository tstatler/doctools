name: Users
methods:
  - name: request_reset_password
    summary: Send a reset password email to User
    description: |
        Send an email to a user to recover lost password. Upon receiving the email,
        the user can click on provided link to reset password.

        You need to goto your App Settings to configure SMTP for your app. Please run
        "check smtp" to make sure the configuration works.

    url: users/request_reset_password.json

    parameters:
      - name: email
        description: Email address. Must match the user's registered email address.
        type: String
        required: true

      - name: subject
        description: |
            The default subject of the password reset email is "Password reset request for
            {{your app name}}". If you wish to have your custom email subject, you can
            provide it by setting the subject parameter

      - name: template
        description: |
            If you wish to use your custom email body. You can create a email template and
            pass the template name. Your email template must contain the following URL to
            allow users to be redirected to Appcelerator Cloud Services password reset
            page:

                https://cloud.appcelerator.com/users/reset_password?key={{key}}&reset_password_token={{reset_password_token}}

            If you have your own website that talks to Appcelerator Cloud Services backend
            and wish to use a custom URL, you must provide a URL with the following
            format:

                https://[your_url.com]/[your_method]?reset_password_token={{reset_password_token}}

            When a user clicks on the above URL and provides new password and
            confirmation, you make a call to Appcelerator Cloud Services to reset the
            password internally from your web server:

                GET https://api.cloud.appcelerator.com/v1/users/reset_password.json?key=<Your App Key>&reset_password_token={{reset_password_token}}&password={{password}} &password_confirmation={{password_confirmation}}
                        
      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean

    examples:
      - platform: titanium
        example: |
            This example requests a password reset for a user and checks the response.

                Cloud.Users.requestResetPassword({
                    email: 'joeuser@mycompany.com'
                }, function (e) {
                    if (e.success) {
                        alert('Success: Reset Request Sent');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/users/request_reset_password.json?key=<YOUR APP APP KEY>&pretty_print=true&email=foo@foo.com"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"RequestResetPassword"
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"foo@foo.com" forKey:@"email"];
                CCRequest *request = [[[CCRequest alloc] httpMethod:@"GET" initWithDelegate:self baseUrl:@"users/request_reset_password.json" paramDict:nil] autorelease];
                [request startAsynchronous];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.method isEqualToString:@"RequestResetPassword"]) {
                		NSLog(@"Successfully sent password reset email");
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("email", "foo@foo.com");
                CCResponse response = sdk.sendRequest("users/request_reset_password.json", CCRequestMethod.GET, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "RequestResetPassword".equals(meta.getMethod())) {
                  System.out.println("Reset password email sent!");
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  email: 'foo@foo.com'
                };
                sdk.sendRequest('users/request_reset_password.json', 'GET', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'RequestResetPassword') {
                        alert('Reset password email sent!');
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                var data:Object = new Object();
                data.email = "foo@foo.com";
                sdk.sendRequest("users/request_reset_password.json", URLRequestMethod.GET, null, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "RequestResetPassword") {
                        Alert.show("Reset password email sent!");
                      }
                    }
                  }
                }

