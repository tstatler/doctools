name: Messages
methods:
  - name: create
    description: |
        Sends a message with an optional subject to one or more specified users. The `thread_id` of
        the first outgoing message is its own id. Replies to the first or subsequent messages in
        the thread will all use the id of the first message as their `thread_id`. The output of this
        API method is the copy of the message saved to the sender's sent mail.
    url: messages/create.json
    http-method: post
    login-required: true

    parameters:
      - name: to_ids
        description: Comma-separated list of one or more IDs of {@link Users} to send the message to.
        type: String
        required: true

      - name: body
        description: The body of the message.
        type: String
        required: true

      - name: subject
        description: Message subject.
        type: String

      - name: custom_fields
        description: User-defined data. See [Custom Objects and Custom Fields](/#!/guide/customfields).
        type: String

      - name: user_id
        type: String
        description: |
            ID of the {@link Users} to send message on behalf of.

            The current login user must be the application admin, in order to send a
            message on behalf of another user.

      - name: pretty_json
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean

    response-parameters:
      - name: messages
        type: Array<Messages>
        description: A copy of the message as sent.

    examples:
      - platform: titanium
        example: |
            This example creates a new message and checks the response.

                Cloud.Messages.create({
                    to_ids: toSet.ids.join(','),
                    body: 'Hello World',
                    subject: 'Test Message'
                }, function (e) {
                    if (e.success) {
                        var message = e.messages[0];
                        alert('Success:\n' +
                            'id: ' + message.id + '\n' +
                            'subject: ' + message.subject + '\n' +
                            'body: ' + message.body + '\n' +
                            'updated_at: ' + message.updated_at);
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -F "to_ids=4d71445b6f70951043000006,4d7184f06f70951043000012" -F "subject=Sunday Afternoon" -F "body=Howabout going to the Academy of Sciences?" https://api.cloud.appcelerator.com/v1/messages/create.json?key=<YOUR APP APP KEY>&pretty_json=true

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"createMessage"
                  },
                  "response": {
                    "messages": [
                      {
                        "id":"4d85418dd0afbe013e000027",
                        "thread_id":"4d85418dd0afbe013e000025",
                        "status":"sent",
                        "subject":"Sunday Afternoon",
                        "body":"Howabout going to the Academy of Sciences?",
                        "created_at":"2011-03-19T23:51:41+0000",
                        "updated_at":"2011-03-19T23:51:41+0000",
                        "from": {
                            "id":"4d7e6493d0afbe01d8000001",
                            "first_name":"Michael",
                            "last_name":"Goff",
                            "created_at":"2011-03-14T18:55:15+0000",
                            "updated_at":"2011-03-19T05:05:29+0000"
                        },
                        "to": [
                          {
                            "id":"4d854129d0afbe013e000022",
                            "first_name":"Wei",
                            "last_name":"Kong",
                            "created_at":"2011-03-19T23:50:01+0000",
                            "updated_at":"2011-03-19T23:50:01+0000"
                          },
                          {
                            "id":"4d85415ad0afbe013e000023",
                            "first_name":"George",
                            "last_name":"Dy",
                            "created_at":"2011-03-19T23:50:50+0000",
                            "updated_at":"2011-03-19T23:50:50+0000"
                          }
                        ]
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                    @"to_ids" : @"USER_ID1, USER_ID2, USER_ID3",
                    @"body"   : @"Hello World",
                    @"subject": @"Test Message"
                };
                [APSMessages create:data withBlock:^(APSResponse *e) {
                    if (e.success){
                        NSArray *messages = e.response[@"messages"];
                        NSDictionary *currentMessage = messages[0];
                        NSString *message = [NSString stringWithFormat:@"id : %@\n Subject : %@\nBody : %@\nUpdated At :%@",
                                                currentMessage[@"id"],
                                                currentMessage[@"subject"],
                                                currentMessage[@"body"],
                                                currentMessage[@"updated_at"]];

                        [[[UIAlertView alloc] initWithTitle:@"Success" 
                                                    message:message
                                                   delegate:nil 
                                          cancelButtonTitle:@"OK" 
                                          otherButtonTitles:nil] show];
                    } else {
                        [[[UIAlertView alloc] initWithTitle:@"Error"
                                                    message:e.errorMessage
                                                   delegate:nil
                                          cancelButtonTitle:@"OK"
                                          otherButtonTitles:nil] show];
                    }

                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                NSDictionary *to_ids = [NSArray arrayWithObjects:user1.objectId, user2.objectId, nil];
                [paramDict setObject:to_ids forKey:@"to_ids"];
                [paramDict setObject:@"hi" forKey:@"subject"]; // optional
                [paramDict setObject:@"This is a test message." forKey:@"body"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"POST" baseUrl:@"messages/create.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *messages = [response getObjectsOfType:[CCMessage class]];
                	for (CCMessage *message in messages)
                	{
                		...
                	}
                }

      - platform: android
        example: |
            Example Android APS SDK call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');
                final Activity currentActivity = this;

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("to_ids", "4d71445b6f70951043000006,4d7184f06f70951043000012");
                data.put("body", "new message!");

                try {
                    APSMessages.create(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            if (e.getSuccess()) {
                                new AlertDialog.Builder(currentActivity)
                                .setTitle("Success!").setMessage("Created!")
                                .setPositiveButton(android.R.string.ok, null)
                                .setIcon(android.R.drawable.ic_dialog_info)
                                .show();
                            } else {
                                Log.e("APSMessages", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(final APSCloudException e) {
                            Log.e("APSMessages", "Exception throw: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSMessages", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("to_ids", "4d71445b6f70951043000006,4d7184f06f70951043000012");
                data.put("body", "new message!");
                CCResponse response = sdk.sendRequest("messages/create.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "createMessage".equals(meta.getMethod())) {
                  JSONArray messages = responseJSON.getJSONArray("messages");
                  ...
                }
