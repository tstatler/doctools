name: SocialIntegrations
methods:
  - name: external_account_unlink
    summary: Unlink an external account
    description: |
        Disassociate an external account from a Appcelerator Cloud Services user
        account.
    url: users/external_account_unlink.json
    http-method: DELETE
    login-required: true

    parameters:
      - name: id
        description: |
            External account's user ID.
        type: String
        required: True

      - name: type
        description: |
            Type of the external account, for example, "facebook", "linkedin", or
            "twitter".
        type: String
        required: True


    response-parameters:
      - name: users
        description: |
            Single-element array containing the updated user record.
        type: Array<Users>

    examples:
      - platform: titanium
        example: |
            This example unlinks an external Facebook account.

                Cloud.SocialIntegrations.externalAccountLink({
                    type: 'facebook',
                    id: facebookUserId
                }, function (e) {
                    if (e.success) {
                        var user = e.users[0];
                        alert('Success:\n' +
                            'id: ' + user.id + '\n' +
                            'first name: ' + user.first_name + '\n' +
                            'last name: ' + user.last_name);
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -X DELETE "https://api.cloud.appcelerator.com/v1/users/external_account_unlink.json?key=<YOUR APP APP KEY>&id;=1234567&type=facebook"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"unlinkExternalAccount"
                  },
                  "response": {
                    "users": [
                      {
                        "id": "4e9afa18356f4e647900002e",
                        "first_name": "John",
                        "last_name": "Smith",
                        "created_at": "2011-10-16T15:36:56+0000",
                        "updated_at": "2011-10-16T15:54:57+0000",
                        "external_accounts": [
                        ]
                      }
                    ]
                  }
                }

                For Facebook:

                NSError *error;
                [[ACSClient defaultACSClient] unlinkFromFacebook:&error;];

            This is a synchronous call and doesn't have a callback method.

            For other types of external account, you need to perform the
            external_account_unlink call.

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"1234567" forKey:@"id"];
                [paramDict setObject:@"twitter" forKey:@"type"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"DELETE" baseUrl:@"users/external_account_unlink.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if (response.meta.status == 200 && response.meta.method == "unlinkExternalAccount") {
                		// success
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                data = new HashMap<String, Object>();
                data.put("id", "109216395704353");
                data.put("type", "facebook");
                CCResponse response = sdk.sendRequest("social/facebook/unlink.json", CCRequestMethod.DELETE, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "unlinkExternalAccount".equals(meta.getMethod())) {
                  JSONArray users = responseJSON.getJSONArray("users");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new ACSClient('<YOUR APP APP KEY>');  // app key
                var data = {
                  id: '109216395704353',
                  type: 'facebook'
                }
                sdk.sendRequest('social/facebook/unlink.json', 'DELETE', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'unlinkExternalAccount') {
                        var user = data.response.users[0];
                       	...
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:ACSClient = new ACSClient("<YOUR APP APP KEY>"); // app key
                //var sdk:ACSClient = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                var data:Object = new Object();
                data.id = "109216395704353";
                data.type = "facebook";
                sdk.sendRequest("social/facebook/unlink.json", URLRequestMethod.DELETE, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "unlinkExternalAccount") {
                       	var user:Object = data.response.users[0];
                       	...
                      }
                    }
                  }
                }

