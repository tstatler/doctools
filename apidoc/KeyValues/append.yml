name: KeyValues
methods:
  - name: append
    summary: Append to a Key-Value

    description: |
        Add the given `value` to end of the existing one. Not allowed on key-values
        with binary data.

    url: keyvalues/append.json
    http-method: PUT
    login-required: true

    parameters:
      - name: name
        description: Name (or key) for the key-value pair.
        type: String
        required: true

      - name: value
        description: Value to append to the current value.
        type: String
        required: true

      - name: access_private
        description: |
            Determines whether to update this key-value in the publically readable store
            or in the user's private store.

            Default is false (publically readable).
        type: Boolean

      - name: user_id
        description: |
            Update the key-value pair on behalf of the identified user.

            Login user must be an admin to update a key-value on behalf of another user.
        type: String

    reponse-parameters:
      - name: keyvalues
        description: |
            A single-element array containing the updated KeyValue object.
        type: Array<KeyValues>

    examples:
      - platform: titanium
        example: |
            This example appends a value to a key-value and checks the response.

                Cloud.KeyValues.append({
                    name: 'welcome_message',
                    value: ', take a look around'
                }, function (e) {
                     if (e.success) {
                         var keyvalue = e.keyvalues[0];
                         alert('Success:\n' +
                             'name: ' + keyvalue.name + '\n' +
                             'value: ' + keyvalue.value);
                     } else {
                         alert('Error:\n' +
                             ((e.error && e.message) || JSON.stringify(e)));
                     }

                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -X PUT -F "name=welcome_message" -F "value=, take a look around" https://api.cloud.appcelerator.com/v1/keyvalues/append.json?key=<YOUR APP APP KEY>

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"appendKeyvalue"
                  },
                  "response": {
                    "keyvalues": [
                      {
                        "id":"4d897a505c032bae9c434696",
                        "name":"welcome_message",
                        "value":"Welcome to the Appcelerator Cloud Services Platform, take a look around",
                        "created_at":"2011-03-23T08:19:50+0000",
                        "updated_at":"2011-03-23T08:19:50+0000"
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"welcome_message" forKey:@"name"];
                [paramDict setObject:@", take a look around" forKey:@"value"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"PUT" baseUrl:@"keyvalues/append.json"  paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *keyvalues = [response getObjectsOfType:[CCKeyValuePair class]];
                	for (CCKeyValuePair *kv in keyvalues)
                	{
                		...
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("name", "welcome_message");
                data.put("value", ", take a look around");
                CCResponse response = sdk.sendRequest("keyvalues/append.json", CCRequestMethod.PUT, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "appendKeyvalue".equals(meta.getMethod())) {
                  JSONArray keyvalues = responseJSON.getJSONArray("keyvalues");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  name: 'welcome_message',
                  value: ', take a look around'
                };
                sdk.sendRequest('keyvalues/append.json', 'PUT', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'appendKeyvalue') {
                        var keyvalues = data.response.keyvalues;
                      	...
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.name = "welcome_message";
                data.value = ", take a look around";
                sdk.sendRequest("keyvalues/append.json", URLRequestMethod.PUT, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "appendKeyvalue") {
                      	var keyvalues:Array = data.response.keyvalues;
                      	...
                      }
                    }
                  }
                }

