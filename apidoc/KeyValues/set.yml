name: KeyValues
methods:
  - name: set
    summary: Set a string or binary value

    description: |
        Sets a string or binary value referenced by the key name. The size of the
        value can be up to 2M, and the key name length can be up to 256 characters.
        The default value type is String.
    url: keyvalues/set.json
    http-method: PUT
    login-required: true

    parameters:
      - name: name
        description: The name, or key, for this key-value pair.
        type: String
        required: true

      - name: type
        description: |
            Value type: "string" or "binary".

            Defaults to "string".
        type: String

      - name: value
        description: |
            Value to assoicate with the key.

            Binary data can be passed as a binary form part. The REST example shows how to
            send binary data using curl.
        type: [ String, BinaryData ]
        required: true

      - name: access_private
        description: |
            Determines whether this key-value is publically readable, or stored in a
            private store.

            Default is false (publically readable). If set to true, it sets the key/value stored
            in the current user's private key-value store. Otherwise, it sets the public
            key-value pair which is readable to everyone.
        type: Boolean

      - name: user_id
        description: |
            User to create the key-value pair on behalf of.

            The current user must be an application admin to set a key-value pair on
            behalf of another user.
        type: String
        
      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean

    examples:
      - platform: titanium
        example: |
            This example sets a key-value and checks the response.

                Cloud.KeyValues.set({
                    name: 'welcome_message',
                    value: 'Welcome to Appcelerator Cloud Services'
                }, function (e) {
                    if (e.success) {
                        alert('Success');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                If type is string
                $ curl -b cookies.txt -c cookies.txt -X PUT -F "name=welcome_message" -F "value=Welcome to Appcelerator Cloud Services" https://api.cloud.appcelerator.com/v1/keyvalues/set.json?key=<YOUR APP APP KEY>&pretty_print=true

                If type is binary (loading data from a file)
                $ curl -b cookies.txt -c cookies.txt -X PUT -F "name=binary" -F "type=binary" -F "value=<photo.jpg" https://api.cloud.appcelerator.com/v1/keyvalues/set.json?key=<YOUR APP APP KEY>&pretty_print=true

            Example JSON response:

                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "setKeyvalue"
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"welcome_message" forKey:@"name"];
                [paramDict setObject:@"Welcome to Appcelerator Cloud Services" forKey:@"value"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"PUT" baseUrl:@"keyvalues/set.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

                For more complex data structure, you can pass in a NSDictionary or NSArray as value and the SDK will automatically convert to a json string on the server and convert it back to NSDictionary or NSArray and store in kv.valueDictionary or kv.valueArray.

                NSDictionary *settingDict = [NSDictionary dictionaryWithObjectsAndKeys:@"true", @"approval_required", nil]
                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"user_setting" forKey:@"name"];
                [paramDict setObject:settingDict forKey:@"value"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"PUT" baseUrl:@"keyvalues/set.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

                Note that if you set a value as a NSDictionary, using append or incrby will mess up the json content and you will not be able to retrieve it back as a dictionary.

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *keyvalues = [response getObjectsOfType:[CCKeyValuePair class]];
                	for (CCKeyValuePair *kv in keyvalues)
                	{
                		if (kv.value) {
                			NSLog(@"set value %@", kv.value);
                		} else if (kv.valueDictionary) {
                			NSLog(@"set value dictionary %@", kv.valueDictionary);
                		} else if (kv.valueArray) {
                			NSLog(@"set value array %@", kv.valueArray);
                		}
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("name", "welcome_message");
                data.put("value", "Welcome to Appcelerator Cloud Services");
                CCResponse response = sdk.sendRequest("keyvalues/set.json", CCRequestMethod.PUT, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "setKeyvalue".equals(meta.getMethod())) {
                  JSONArray keyvalues = responseJSON.getJSONArray("keyvalues");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  name: 'welcome_message',
                  value: 'Welcome to Appcelerator Cloud Services'
                };
                sdk.sendRequest('keyvalues/set.json', 'PUT', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'setKeyvalue') {
                        var keyvalues = data.response.keyvalues;
                      	...
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.name = "welcome_message";
                data.value = "Welcome to Appcelerator Cloud Services";
                sdk.sendRequest("keyvalues/set.json", URLRequestMethod.PUT, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "setKeyvalue") {
                      	var keyvalues:Array = data.response.keyvalues;
                      	...
                      }
                    }
                  }
                }

