name: Statuses
methods:
  - name: create
    summary: Create a Status
    description: |
        Creates a status for the currenty logged in user.
    url: statuses/create.json
    http-method: POST
    login-required: true

    parameters:

      - name: message
        description: Status message.
        type: String

      - name: place_id
        description: ID of the place this status is associated with.
        type: String

      - name: event_id
        description: ID of the event this status is associated with.
        type: String

      - name: photo
        description: |
            New photo to attach as the primary photo for this status.

            When you use the `photo` parameter to attach a new photo, you can use the
            [custom resize and sync options](#!/guide/photosizes).
        type: Photos

      - name: photo_id
        description: |
            ID of an existing photo to attach as the primary photo for this status.
        type: String

      - name: tags
        description:  |
            Comma separated list of tags for this status.
        type: String

      - name: custom_fields
        description: User defined fields. See [Custom Data Fields](#!/guide/customfields).
        type: [ String, Hash ]

      - name: acl_name
        description: |
            Name of an {@link ACLs} to associate with this status.

            An ACL can be specified using `acl_name` or `acl_id`. The two parameters are
            mutually exclusive.
        type: String

      - name: acl_id
        description: |
            ID of an {@link ACLs} to associate with this status.

            An ACL can be specified using `acl_name` or `acl_id`. The two parameters are
            mutually exclusive.
        type: String

      - name: user_id
        description: |
            User ID to create the status on behalf of.

            The current login user must be an application admin to create a status on
            behalf of another user.
        type: String

    response-parameters:
      - name: statuses
        description: Single-element array containing the newly-created status.
        type: Array<Statuses>

    examples:
      - platform: titanium
        example: |
            This example creates a status and checks the response.

                Cloud.Statuses.create({
                    place_id: myPlaceId,
                    message: 'What a great view!',
                    photo: Titanium.Filesystem.getFile('photo.jpg')
                }, function (e) {
                    if (e.success) {
                        var status = e.statuses[0];
                        alert('Success:\n' +
                            'id: ' + status.id + '\n' +
                            'place: ' + status.place.name);
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -F "message=Having fun at the beach" -F "photo=@photo.jpg" https://api.cloud.appcelerator.com/v1/statuses/create.json?key=<YOUR APP APP KEY>

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"createStatus"
                  },
                  "response": {
                    "statuses": [
                      {
                        "id":"4d6e86ed6f70950c89000004",
                        "message":"Having fun at the beach",
                        "created_at":"2011-03-02T18:05:33+0000",
                        "updated_at":"2011-03-02T18:05:33+0000",
                        "photo": {
                	        "id":"4dcf261cd0afbe1833000002",
                	        "filename":"photo.jpg",
                	        "size":584344,
                	        "md5":"589b8ad43ed20bf8e622d719642bc939",
                	        "created_at":"2011-05-15T01:02:20+0000",
                	        "updated_at":"2011-05-15T01:02:20+0000",
                	        "processed":false
                        }
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"Working hard at Appcelerator Cloud Services Office" forKey:@"message"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"POST" baseUrl:@"statuses/create.json" paramDict:paramDict];
                [request addPhotoUIImage:(UIImage *)meworkinghardImage paramDict:nil];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *statuses = [response getObjectsOfType:[CCStatuses class]];
                	for (CCStatus *status in statuses)
                	{
                		...
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("message", "new status!");
                CCResponse response = sdk.sendRequest("statuses/create.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "createStatus".equals(meta.getMethod())) {
                  JSONArray statuses = responseJSON.getJSONArray("statuses");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  message: 'new status!'
                };
                sdk.sendRequest('statuses/create.json', 'POST', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'createStatus') {
                        var statuses = data.response.statuses;
                      	...
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.message = "new status!";
                sdk.sendRequest("statuses/create.json", URLRequestMethod.POST, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "createStatus") {
                      	var statuses:Array = data.response.statuses;
                      	...
                      }
                    }
                  }
                }

