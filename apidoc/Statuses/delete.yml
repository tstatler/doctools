name: Statuses
methods:
  - name: delete
    summary: Delete a Status
    description: |
        Deletes a status for the currenty logged in user.
    url: statuses/delete.json
    http-method: DELETE
    login-required: true

    parameters:

      - name: status_id
        description: ID of the status to delete.
        type: String
        required: true

      - name: user_id
        description: |
            User ID to destroy the status on behalf of.

            The current login user must be an application admin to destroy a status on
            behalf of another user.
        type: String

    examples:
      - platform: titanium
        example: |
            Requires Release 3.2.0. This example deletes a status and checks the response.

                Cloud.Statuses.delete({
                    status_id: statusID
                }, function (e) {
                    if (e.success) {
                        alert('Success!');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -X DELETE "https://api.cloud.appcelerator.com/v1/places/delete.json?key=<YOUR APP APP KEY>&status_id=4d51d4186f70952d4c000006"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"deleteStatus"
                  },
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:(CCStatus *)status.objectId, @"status_id", nil];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"DELETE" baseUrl:@"statuses/delete.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                    if ([response.meta.method isEqualToString:@"statusPlace"]) {
                        NSLog(@"status deleted!");
                    }
                }

      - platform: android
        example: |
            Example Android APS SDK call:

                APSCloud.enable(this, 'APS_CLOUD_KEY');
                final Activity currentActivity = this;

                HashMap<String, Object> data = new HashMap<String, Object>();
                data.put("status_id", "3453452345deadbeef345");

                try {
                    APSStatuses.remove(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            // The callback will be run on a background thread
                            // Switch to the main thread before interacting with the UI
                            if (currentActivity != null) {
                                currentActivity.runOnUiThread(new Runnable() {
                                    public void run() {
                                        if (e.getSuccess()) {
                                            Toast.makeText(currentActivity, "Removed!", Toast.LENGTH_SHORT);
                                        } else {
                                            Log.e("APSStatuses", "ERROR: " + e.getMessage());
                                        }
                                    }
                                });
                            }

                        }
                    });
                } catch (APSClientError e) {
                    Log.e("APSStatuses", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("status_id", "3453452345deadbeef345");
                CCResponse response = sdk.sendRequest("statuses/delete.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "deleteStatus".equals(meta.getMethod())) {
                  System.out.println("status deleted!");
                }

