name: GeoFences
methods:
  - name: create
    summary: Creates a Geofence.

    description: |
        Creates a geo-fence object with an optional start and end time.

        Available only for Enterprise administrators.

    url: geo_fences/create.json
    http-method: POST
    login-required: true
    admin-required: true

    parameters: 

      - name: geo_fence
        description: |
            JSON object describing the geographic perimeter, data payload, and start and end time
            for the geo-fence object.  Specify the following propertes:

              * `loc` (Hash): **Required.** Geographic perimeter.  See {@link GeoFences#loc}.
              * `payload` (Hash): **Required.** JSON-encoded data to retrieve if a device intersects
                the geographic perimeter.
              * `start_time` (Date): Datetime to start the geo-fence.
              * `end_time` (Date): Datetime to end the geo-fence.

        type: Hash
        required: true

      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean        

    response-parameters:
      - name: geo_fences
        description: |
            Single-element array containing the newly-created geo-fence object.
        type: Array<GeoFences>

    examples:
      - platform: titanium
        example: |
            Requires Titanium SDK 3.2.1 or later.

            The following example creates a geo-fence covering a ten-mile area with San
            Francisco, CA, USA as the center point:

                Cloud.GeoFences.create({
                    geo_fence: {
                        "loc":{"coordinates":[-122.4167,37.7833], "radius":"10/3959"},
                        "payload":{"alert":"24-hour sale at our SF flagship store on 12/26!"},
                        "start_time": "2014-03-08T00:00",
                        "end_time":"2014-12-26T19:00"
                    }
                }, function (e) {
                    if (e.success) {
                        Ti.API.info(JSON.stringify(e.geo_fences));
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            The following example creates a geo-fence covering a ten-mile area with San
            Francisco, CA, USA as the center point:

                $ curl -b cookies.txt -c cookies.txt -X POST -F 'geo_fence={"loc":{"coordinates":[-122.4167,37.7833], "radius":"10/3959"}, "payload":{"alert":"24-hour sale at our SF flagship store on 12/26!"}, "start_time":"2013-12-25T00:00","end_time":"2013-12-26T19:00"}' "http://api.cloud.appcelerator.com/v1/geo_fences/create.json?key=<API_KEY>"

            Example JSON response:

                {
                  "meta": {
                    "code": 200,
                    "status": "ok",
                    "method_name": "createGeoFence"
                  },
                  "response": {
                    "geo_fences": [
                      {
                        "id": "52aa2da0d7de142e0e000040",
                        "start_time": "2013-12-25T00:00:00+0000",
                        "end_time": "2013-12-26T19:00:00+0000",
                        "loc": {
                          "coordinates": [
                            -122.4167,
                            37.7833
                          ],
                          "radius": "10/3959"
                        },
                        "payload": {
                          "alert": "24-hour sale at our SF flagship store on 12/26!"
                        },
                        "created_at": "2013-12-12T21:41:52+0000",
                        "updated_at": "2013-12-12T21:41:52+0000"
                      }
                    ]
                  }
                }

      - platform: android
        example: |
            Example Android APS SDK call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');
                final Activity currentActivity = this;

                JSONObject loc = new JSONObject("{'coordinates':[-122.4167,37.7833], 'radius':'10/3959'}");
                JSONObject payload = new JSONObject("{'alert':'24-hour sale at our SF flagship store on 12/26!'}");
                HashMap<String, Object> data = new HashMap<String, Object>();
                data.put("loc", loc);
                data.put("payload", payload);
                data.put("start_time", "2014-03-08T00:00");
                data.put("end_time", "2014-12-26T19:00");

                try {
                    APSGeofences.create(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            if (e.getSuccess()) {
                                new AlertDialog.Builder(currentActivity)
                                .setTitle("Success!").setMessage("Created!")
                                .setPositiveButton(android.R.string.ok, null)
                                .setIcon(android.R.drawable.ic_dialog_info)
                                .show();
                            } else {
                                Log.e("APSGeofences", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(final APSCloudException e) {
                            Log.e("APSGeofences", "Exception throw: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSGeofences", "Exception thrown: " + e.toString());
                }

