name: ACLs
methods:
  - name: create
    summary: Create an access control list
    description: |
        Creates an ACL object, which can be used to control access to ACS objects.

    url: acls/create.json
    http-method: POST
    login-required: true

    parameters:
      - name: name
        description: |
            Name of the ACL object.
        type: String
        required: true

      - name: reader_ids
        description: |
            Comma separated list of IDs identifying users who can read objects
            controlled by this ACL.
        type: String

      - name: writer_ids
        description: |
            Comma separated list of IDs identifying users who can update an object.
            controlled by this ACL.
        type: String

      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean


      - name: public_read
        description: |
            Determines whether objects controlled by this ACS are publically readable.

            Default is false.
        type: Boolean

      - name: public_write
        description: |
            Determines whether objects controlled by this ACS are publically writable.

            Default is false.
        type: Boolean

      - name: user_id
        description: |
            Specifies the owner of the new URL.

            Only allowed if the current login user is an application admin. Otherwise, the
            new ACL is always owned by the current login user.
        type: String

    response-parameters:
      - name: acls
        description: Array containing the created ACL.
        type: Array<ACLs>


    examples:
      - platform: titanium
        example: |
            This example creates an ACL object and checks the response.

                Cloud.ACLs.create({
                    name: 'testACL',
                    reader_ids: readers.ids.join(','),
                    writer_ids: writers.ids.join(','),
                    public_read: false,
                    public_write: false
                }, function (e) {
                    if (e.success) {
                        alert('Created!');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b c.txt -c c.txt -F "name=access_photo_album" -F "reader_ids[]=4fcdab1f47b7b71933000003" -F "reader_ids[]=4fcdab1f47b7b71933000004" -F "reader_ids[]=4fcdab2047b7b71933000005" -F "writer_ids[]=4fcdab1f47b7b71933000003" https://api.cloud.appcelerator.com/v1/acls/create.json?key=<YOUR APP APP KEY>&pretty_print=true

            Example JSON response:

                {
                  "meta": {
                    "code": 200,
                    "status": "ok",
                    "method_name": "createAcl"
                  },
                  "response": {
                    "acls": [
                      {
                        "id": "4fcdab2047b7b7193300000c",
                        "name": "access my album",
                        "created_at": "2012-06-05T06:45:52+0000",
                        "updated_at": "2012-06-05T06:45:52+0000",
                        "public_read": false,
                        "user": {
                          "id": "4fcdab2047b7b71933000007",
                          "first_name": "Abe",
                          "last_name": "Bob",
                          "created_at": "2012-06-01T06:43:01+0000",
                          "updated_at": "2012-06-01T06:43:01+0000",
                          "external_accounts": [

                          ],
                          "confirmed_at": "2012-06-01T06:43:01+0000",
                          "email": "a@mike.com",
                          "admin": "false"
                        },
                        "readers": [
                          "4fcdab1f47b7b71933000003",
                          "4fcdab1f47b7b71933000004",
                          "4fcdab2047b7b71933000005",
                          "4fcdab2047b7b71933000007"
                        ],
                        "public_write": false,
                        "writers": [
                          "4fcdab1f47b7b71933000003",
                          "4fcdab2047b7b71933000007"
                        ]
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS APS SDK call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                    @"name": @"testACL",
                    @"reader_ids": @"4fcdab1f47b7b71933000003",
                    @"reader_ids": @"4fcdab1f47b7b71933000003"
                };

                [APSACLs create:data withBlock:^(APSResponse *e) {
                    if (e.success) {
                        [[[UIAlertView alloc] initWithTitle:@"Great" message:@"Success!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                    } else {
                        [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                    }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:1];
                [paramDict setObject:@"access my album" forKey:@"name"];
                [paramDict setObject:[NSArray arrayWithObjects:[@"4fcdab1f47b7b71933000003", "4fcdab1f47b7b71933000004", "4fcdab2047b7b71933000005", nil] forKey:@"reader_ids"];
                [paramDict setObject:[NSArray arrayWithObjects:[@"4fcdab1f47b7b71933000003", nil] forKey:@"writer_ids"];

                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"POST" baseUrl:@"acls/create.json" paramDict:paramDict];
                [request addPhotoUIImage:(UIImage *)placeImage paramDict:nil];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *acls = [response getObjectsOfType:[CCACL class]];
                	for (CCACL *acl in acls)
                	{
                		...
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("name", "access_photo_album");
                data.put("reader_ids", "4fcdab1f47b7b71933000003,4fcdab1f47b7b71933000004,4fcdab1f47b7b71933000005");
                data.put("writer_ids", "4fcdab1f47b7b71933000003");
                CCResponse response = sdk.sendRequest("acls/create.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "createAcl".equals(meta.getMethod())) {
                  JSONArray acls = responseJSON.getJSONArray("acls");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  name: 'access_photo_album',
                  reader_ids: '4fcdab1f47b7b71933000003,4fcdab1f47b7b71933000004,4fcdab1f47b7b71933000005',
                  writer_ids: '4fcdab1f47b7b71933000003'
                };
                sdk.sendRequest('acls/create.json', 'POST', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'createAcl') {
                        var acls = data.response.acls;
                      	...
                      }
                    }
                  }
                }

