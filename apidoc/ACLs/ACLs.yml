name: ACLs
summary: Access Control Lists (ACLs)
description: |
    The ACL object implements access control lists for ACS objects. An access
    control list controls read and write access to any ACS objects it's attached
    to. For ACS, read and write permission are defined as follows:
    
      * **Read permission** includes the ability to show, query and search ACS objects.
      * **Write permission** includes the ability to update and delete ACS objects.
    
    An ACL can include:
    
      * A _list_ of user IDs granted read permission.
      * A _list_ of user IDs granted write permission.
      * A public read flag granting read permission to **all** users.
      * A public write flag granting write permission to **all** users.
    The object's owner always has read and write permission.  
    You can specify an ACL when you create or update an object.  
      
    
    Currently, ACLs can be used with the following ACS objects: Checkins, Custom
    Objects, Events, Files, Photos, Photo Collections, Places, Posts, Reviews and
    Statuses.
    
    For more details, please read following section **ACL Usage**  
    An ACL object includes four important attributes, they are public_read,
    public_write, reader_ids and writer_ids, and the value of the attributes
    public_read and public_write are boolean type(true/false); the attributes
    reader_ids and writer_ids are array which contains comma separated users id in
    them.
    
      * **public read / public write: **
    User1 creates an ACL object which name is "photo_access", the value of its
    property _public_read_ is true, as well as _public_write_ is true, then User1
    create or update a photo object by specifying "acl_name=photo_access" or
    acl_id, so that the photo has relationship with the ACL object and is under
    control of the ACL object, because the values of public_read and public_write
    of the ACL object, so any user can update/delete/show/query/search this photo
    which is attached by this ACL object. By default, the value of the properties
    public_read and public_write are all false if they are not assigned to true
    when creating the ACL object.
    
      * **private read / reader ids: **
    Update the ACL object which name is "photo_access" by calling ACL update API,
    and set public_read to false, so that the above photo object can only read by
    App administrator and owner(User1); Then update "photo_access" to false, and
    add the ids of user2 and user3 to the array reader_ids of this ACL object, at
    this time, App administrator, owner(user1), user2 and user3 can
    read(show/search/query) the photo object. Again, update the ACL's public_read
    to true, so that any user can read(show/search/query) the photo object,
    regardless of what users' id in the array reader_ids of the ACL object.
    
      * **private write / writer ids: **
    Update the ACL object which name is "photo_access" by calling ACL update API,
    and set public_write to false, so that the above photo object can only write
    by App administrator and owner(User1); Then update "photo_access" to false,
    and add the ids of user2 and user3 to the array writer_ids of this ACL object,
    at this time, App administrator, owner(user1), user2 and user3 can
    write(update/delete) the photo object. Again, update the ACL's public_write to
    true, so that any user can write(update/delete) the photo object, regardless
    of what users' id in the array writer_ids of the ACL object.

fields:
  - name: name 
    description: Name of the ACL object.
    type: String

  - name: id 
    description: ID of the ACL object, automatically generated by ACS.
    type: String

  - name: readers
    description: |
        List of IDs identifying users who can read objects controlled by this ACL.
    type: Array<String>

  - name: writers
    description: |
        List of IDs identifying users who can update objects controlled by this ACL.
    type: Array<String>

  - name: public_read
    description: |
        Determines whether objects controlled by this ACS are publicly readable. 

        Default is false.
    type: Boolean

  - name: public_write
    description: |
        Determines whether objects controlled by this ACS are publicly writable. 

        Default is false.
    type: Boolean

  - name: user
    description: Owner of the ACL.
    type: Users

  - name: created_at
    description: ACL creation date.
    type: Date

  - name: updated_at
    description: ACL update date.
    type: Date
