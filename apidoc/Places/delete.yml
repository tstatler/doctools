name: Places
methods:
  - name: delete
    summary: Delete a Place

    description: |
        Deletes a place.

        Only the user who created the place can delete it.  
          
        An application admin can delete any Place object.
        
    url: places/delete.json
    http-method: DELETE
    login-required: true

    parameters:

      - name: place_id
        description: ID of the place to delete.
        type: String
        required: true

      - name: keep_photo
        description: |
            If this place has a primary photo that was created by using the `photo`
            parameter to {@link Places#create create} or {@link Places#update update}, 
            the photo object will be deleted as well. Use `keep_photo=true` to tell 
            Appcelerator Cloud Services to not delete this photo.
        type: Boolean

    examples:
      - platform: titanium
        example: |
            This example deletes a place and checks the response.
            
                Cloud.Places.remove({
                    place_id: savedPlaceId
                }, function (e) {
                    if (e.success) {
                        alert('Success');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });
    
      - platform: rest
        example: |
            Example cURL request:
            
                $ curl -b cookies.txt -c cookies.txt -X DELETE "https://api.cloud.appcelerator.com/v1/places/delete.json?key=<YOUR APP APP KEY>&place;_id=4d51d4186f70952d4c000006"
                
            Example JSON response:
            
                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"deletePlace"
                  }
                }
                
      - platform: ios
        example: |
            Example iOS call:
            
                NSDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:(CCPlace *)place.objectId, @"place_id", nil];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"DELETE" baseUrl:@"places/delete.json" paramDict:nil];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.method isEqualToString:@"deletePlace"]) {
                		NSLog(@"place deleted!");
                	}
                }
                
      - platform: android
        example: |
            Example Android call:
            
                Cocoafish sdk = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //Cocoafish sdk = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("place_id", "4d8910aed0afbe0e4e000006");
                CCResponse response = sdk.sendRequest("places/delete.json", CCRequestMethod.DELETE, data);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "deletePlace".equals(meta.getMethod())) {
                  System.out.println("place deleted!");
                }
                
      - platform: javascript
        example: |
            Example Javascript call:
            
                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  place_id: '4d8910aed0afbe0e4e000006'
                };
                sdk.sendRequest('places/delete.json', 'DELETE', data, callback);
                
            SDK Callback:
            
                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'deletePlace') {
                        alert("place deleted!");
                      }
                    }
                  }
                }
                
      - platform: actionscript
        example: |
            Example Actionscript call:
            
                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                var data:Object = new Object();
                data.place_id = "4d8910aed0afbe0e4e000006";
                sdk.sendRequest("places/delete.json", URLRequestMethod.DELETE, data, false, callback);
                
            SDK Callback:
            
                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "deletePlace") {
                      	Alert.show("place deleted!");
                      }
                    }
                  }
                }
                
