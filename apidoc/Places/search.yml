name: Places
methods:
  - name: search
    summary: Search Places

    description: |
        Returns the list of places that have been added to the app, sorted by search
        relevancy.
        
        Optionally, `latitude` and `longitude` can be given to return the list of
        places starting from a particular location. To bound the results within a
        certain radius (in km) from the starting coordinates, add the `distance`
        parameter. `q` can be given to search by place name.
        
        If you have provided a starting latitude and longitude for place search, each
        result will return a distance to the starting point in km.
        
    url: places/search.json

    parameters:

      - name: page  
        description: Request page number, default is 1.
        type: Number
      
      - name: per_page
        description: Number of results per page, default is 10.
        type: Number

      - name: response_json_depth
        description: |
            Nested object depth level counts in the response JSON.  

            In order to reduce server API calls from an applicaton, the response JSON may
            include not just the objects that are being queried/searched, but also 
            some important data related to the returned objects, such as owners and
            referenced objects.  

            Default is 3, valid range is 1 to 8.
        type: Number

      - name: latitude
        description: Latitude to center search on.
        type: Number

      - name: longitude
        description: Longitude to center search on.
        type: Number

      - name: distance
        description: Distance in km to search from the identified center point.
        type: Number

      - name: q
        description: Space-separated list of keywords used to perform full text search on place name and tags.
        type: String

    response-parameters:
      - name: places
        description: List of places matching the search criteria.
        type: Array<Places>

    examples:
      - platform: rest
        example: |
            Example cURL request:
            
                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/places/search.json?key=<YOUR APP APP KEY>&latitude;=37.743722&longitude;=-122.393159"
                
            Example JSON response:
            
                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"searchPlaces",
                    "page":1,
                    "per_page":10,
                    "total_pages":1,
                    "total_results":2
                  },
                  "response": {
                    "places": [
                      {
                        "id":"4d2e399b6f70951b6f000013",
                        "name":"Maya Restaurant",
                        "created_at":"2011-01-12T23:30:35+0000",
                        "updated_at":"2011-01-12T23:30:35+0000",
                        "address":"303 2nd Street",
                        "city":"San Francisco",
                        "state":"CA",
                        "country":"United States",
                        "phone":"(415) 543-2928",
                        "latitude": 37.743722,
                        "longitude": -122.421978,
                        "distance": 2.53
                      },
                      {
                        "id":"4d2e45ab6f70951b6f00003d",
                        "name":"Farolito Taqueria",
                        "created_at":"2011-01-13T00:22:03+0000",
                        "updated_at":"2011-01-13T00:22:03+0000",
                        "address":"2779 Mission Street",
                        "city":"San Francisco",
                        "state":"CA",
                        "country":"United States",
                        "phone":"(415) 824-7877",
                        "latitude": 37.782227,
                        "longitude": -122.393159,
                        "distance": 4.28	
                      }
                    ]
                  }
                }
                
      - platform: ios
        example: |
            Example iOS call:
            
                // search for current user's checkins
                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:3];
                [paramDict setObject:@"appcelerator"  forKey:@"q"]; // optional
                [paramDict setObject:[NSNumber numberWithInt:1] forKey:@"page"]; // optional
                [paramDict setObject:[NSNumber numberWithInt:10] forKey:@"per_page"]; // optional
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"GET" baseUrl:@"places/search.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *places = [response getObjectsOfType:[CCPlace class]];
                }
                
      - platform: android
        example: |
            Example Android call:
            
                Cocoafish sdk = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //Cocoafish sdk = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                CCResponse response = sdk.sendRequest("places/search.json", CCRequestMethod.GET, null);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "searchPlaces".equals(meta.getMethod())) {
                  JSONArray places = responseJSON.getJSONArray("places");
                  ...
                }
                
      - platform: javascript
        example: |
            Example Javascript call:
            
                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                sdk.sendRequest('places/search.json', 'GET', null, callback);
                
            SDK Callback:
            
                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'searchPlaces') {
                        var places = data.response.places;
                      	...
                      }
                    }
                  }
                }
                
      - platform: actionscript
        example: |
            Example Actionscript call:
            
                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                sdk.sendRequest("places/search.json", URLRequestMethod.GET, null, false, callback);
                
            SDK Callback:
            
                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "searchPlaces") {
                      	var places:Array = data.response.places;
                      	...
                      }
                    }
                  }
                }
                
