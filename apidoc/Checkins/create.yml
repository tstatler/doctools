name: Checkins
methods:
  - name: create
    summary: Checkin to a Place or Event

    description: |
        Creates a checkin to a place or an event.

        A checkin message is optional. The optional photo parameter contains the
        binary data stream representing the photo included with the checkin. If a
        photo is included, the response includes a "processed" flag which indicates if
        the photo has been resized and stored reliably in the Appcelerator Cloud
        Services storage engine. This will be false initially be false.

    url: checkins/create.json
    http-method: POST
    login-required: true

    parameters:
      - name: place_id
        description: |
            ID of the {@link Places} to check in to.

            Either `place_id` or `event_id` must be specified.
        type: String

      - name: event_id
        description: |
            ID of the {@link Events} to check in to.

            Either `place_id` or `event_id` must be specified.
        type: String

      - name: message
        description: Message to attach to the checkin.
        type: String

      - name: photo
        description: |
            New photo to attach as the primary photo for the checkin.

            When you use the `photo` parameter to attach a new photo, you can use the
            [custom resize and sync options](#!/guide/photosizes).
        type: Photos

      - name: photo_id
        description: |
            ID of an existing photo to attach as the primary photo for the checkin.
        type: String

      - name: tags
        description:  |
            Comma separated list of tags for this checkin.
        type: String

      - name: custom_fields
        description: User defined fields. See [Custom Data Fields](#!/guide/customfields).
        type: [ String, Hash ]

      - name: acl_name
        description: |
            Name of an {@link ACLs} to associate with this checkin object.

            An ACL can be specified using `acl_name` or `acl_id`. The two parameters are
            mutually exclusive.
        type: String

      - name: acl_id
        description: |
            ID of an {@link ACLs} to associate with this checkin object.

            An ACL can be specified using `acl_name` or `acl_id`. The two parameters are
            mutually exclusive.
        type: String

      - name: user_id
        description: |
            User ID to create the checkin on behalf of.

            The current login user must be an application admin to create a checkin on
            behalf of another user.
        type: String

    response-params:
      - name: checkins
        description: Single element array containing the newly-created checkin.
        type: Array<Checkins>

    examples:
      - platform: titanium
        example: |
            This example creates a checkin and checks the response.

                Cloud.Checkins.create({
                    place_id: myPlaceId,
                    message: 'What a great view!',
                    photo: Titanium.Filesystem.getFile('photo.jpg')
                }, function (e) {
                    if (e.success) {
                        var checkin = e.checkins[0];
                        alert('Success:\\n' +
                            'id: ' + checkin.id + '\\n' +
                            'place: ' + checkin.place.name);
                    } else {
                        alert('Error:\\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -F "message=Try the grilled steak burrito" -F "place_id=4d6f13e96f70953608000012" -F "photo=@photo.jpg" https://api.cloud.appcelerator.com/v1/checkins/create.json?key=<YOUR APP APP KEY>

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"createCheckin"
                  },
                  "response": {
                    "checkins": [
                      {
                        "id":"4d713b4f6f70951043000001",
                        "message":"Try the grilled steak burrito",
                        "created_at":"2011-03-04T19:19:43+0000",
                        "updated_at":"2011-03-04T19:19:43+0000",
                        "place": {
                          "id":"4d6f13e96f70953608000012",
                          "name":"Maya Restaurant",
                          "created_at":"2011-03-03T04:07:05+0000",
                          "updated_at":"2011-03-03T04:07:05+0000",
                          "address":"303 2nd Street",
                          "city":"San Francisco",
                          "state":"CA",
                          "country":"United States",
                          "phone":"(415) 543-2928",
                          "lat":37.784732,
                          "lng":-122.395441
                        },
                        "user": {
                          "id":"4d6e77386f70950c89000001",
                          "first_name":"Michael",
                          "last_name":"Goff",
                          "created_at":"2011-03-02T16:58:32+0000",
                          "updated_at":"2011-03-02T17:51:42+0000"
                        },
                        "photo": {
                          "id":"4d713b4f6f70951043000002",
                          "filename":"photo.jpg",
                          "size":584344,
                          "md5":"589b8ad43ed20bf8e622d719642bc939",
                          "created_at":"2011-03-04T19:19:43+0000",
                          "updated_at":"2011-03-04T19:19:43+0000",
                          "processed":false
                        }
                      }
                    ]
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSMutableDictionary *paramDict = [NSMutableDictionary dictionaryWithCapacity:3];
                [paramDict setObject:@"123" forKey:@"place_id"]; // or event_id
                [paramDict setObject:@"Here is windy!" forKey:@"message"];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"POST" baseUrl:@"checkins/create.json" paramDict:paramDict];
                [request addPhotoUIImage:image paramDict:nil];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	NSArray *checkins = [response getObjectsOfType:[CCCheckin class]];
                	...
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("place_id", "4d6f13e96f70953608000012");
                //data.put("event_id", "4d6e77386f70950c89000001");
                CCResponse response = sdk.sendRequest("checkins/create.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "createCheckin".equals(meta.getMethod())) {
                  JSONArray checkins = responseJSON.getJSONArray("checkins");
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new ACSClient('<YOUR APP APP KEY>');  // app key
                var data = {
                  place_id: '4d6f13e96f70953608000012'
                  //event_id: '4d6e77386f70950c89000001'
                };
                sdk.sendRequest('checkins/create.json', 'POST', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'createCheckin') {
                        var checkins = data.response.checkins;
                      	...
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:ACSClient = new ACSClient("<YOUR APP APP KEY>"); // app key
                //var sdk:ACSClient = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.place_id = "4d6f13e96f70953608000012";
                //data.event_id = "4d6e77386f70950c89000001";
                sdk.sendRequest("checkins/create.json", URLRequestMethod.POST, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "createCheckin") {
                      	var checkins:Array = data.response.checkins;
                      	...
                      }
                    }
                  }
                }

