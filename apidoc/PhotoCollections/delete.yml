name: PhotoCollections
methods:
  - name: delete
    summary: Delete a Photo Collection

    description: |
        Delete an empty collection. An error will be returned if a collection contains
        any photos or subcollections.

        An application admin can delete any photo collection.

    url: collections/delete.json
    http-method: DELETE
    login-required: true

    parameters:
      - name: collection_id
        description: ID of the collection to delete.
        type: String
        required: true

      - name: user_id
        description: |
            User ID to delete the collection on behalf of. The user must be the creator of the collection.

            The current login user must be an application admin to delete a collection on
            behalf of another user.
        type: String
        
      - name: pretty_json
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean

    examples:
      - platform: titanium
        example: |
            This example deletes a photo collection and checks the response.

                Cloud.PhotoCollections.remove({
                    collection_id: savedPhotoCollectionId
                }, function (e) {
                    if (e.success) {
                        alert('Success');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -X DELETE "https://api.cloud.appcelerator.com/v1/collections/delete.json?key=<YOUR APP APP KEY>&pretty_json=true&collection_id=4e013938d0afbe3896000009"

            Example JSON response:

                {
                  "meta": {
                    "code": 200,
                    "method_name": "deleteCollection",
                    "status": "ok"
                  }
                }

      - platform: ios
        example: |
            Example iOS call:

                NSDictionary *data = @{
                                         @"collection_id" : @"savedPhotoCollectionID"
                                      };
                [APSPhotoCollections remove:data withBlock:^(APSResponse *e) {
                    if (e.success){
                        [[[UIAlertView alloc] initWithTitle:@"Success" 
                                                    message:@"Photo Removed"
                                                   delegate:nil 
                                          cancelButtonTitle:@"OK" 
                                          otherButtonTitles:nil] show];

                    } else {
                        [[[UIAlertView alloc] initWithTitle:@"Error"
                                                    message:e.errorMessage
                                                   delegate:nil
                                          cancelButtonTitle:@"OK"
                                          otherButtonTitles:nil] show];
                    }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:(CCCollection *)collection.objectId, @"collection_id", nil];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"DELETE" baseUrl:@"collections/delete.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.method isEqualToString:@"deleteCollection"]) {
                		NSLog(@"Collection deleted!");
                	}
                }

      - platform: android
        example: |
            Example Android APS SDK call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');
                final Activity currentActivity = this;

                HashMap<String, Object> data = new HashMap<String, Object>();
                data.put("collection_id", "4e013938d0afbe3896000009");

                try {
                    APSPhotoCollections.remove(null, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            if (e.getSuccess()) {
                                new AlertDialog.Builder(currentActivity)
                                .setTitle("Success!").setMessage("Removed!")
                                .setPositiveButton(android.R.string.ok, null)
                                .setIcon(android.R.drawable.ic_dialog_info)
                                .show();
                            } else {
                                Log.e("APSPhotoCollections", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(final APSCloudException e) {
                            Log.e("APSPhotoCollections", "Exception throw: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSPhotoCollections", "Exception thrown: " + e.toString());
                }

      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("collection_id", "4e013938d0afbe3896000009");
                CCResponse response = sdk.sendRequest("collections/delete.json", CCRequestMethod.DELETE, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "deleteCollection".equals(meta.getMethod())) {
                  System.out.println("Collection deleted!");
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  collection_id: '4e013938d0afbe3896000009'
                };
                sdk.sendRequest('collections/delete.json', 'DELETE', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'deleteCollection') {
                        alert("Collection deleted!");
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.collection_id = "4e013938d0afbe3896000009";
                sdk.sendRequest("collections/delete.json", URLRequestMethod.DELETE, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "deleteCollection") {
                      	Alert.show("Collection deleted!");
                      }
                    }
                  }
                }

