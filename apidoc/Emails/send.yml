name: Emails
methods:
  - name: email_from_template
    summary: Send Emails
    description: |
        Sends an email to a list of email addresses from your application. 

    url: custom_mailer/email_from_template.json
    http-method: POST

    parameters:
      - name: template
        description: |
            Name of the email template you have created.
        type: String
        required: true

      - name: recipients
        description: Comma separated list of email addresses.
        type: String
        required: true

      - name: from
        description: |
            The sender's email address. 

            Notes:
            * If you use Google as your SMTP server, the email will always be sent using the email account 
            you used to configure the SMTP service. 
            * Some SMTP service provider require the sender's email address to be present.
        type: String      

      - name: pretty_json
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean              

    examples:
      - platform: titanium
        example: |
            This example sends an Email and checks the response.

                Cloud.Emails.send({
                    template: 'welcome',
                    recipients: 'joe@company.com'
                }, function (e) {
                    if (e.success) {
                        alert('Success');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -F "recipients=joe@company.com" -F "template=welcome" https://api.cloud.appcelerator.com/v1/custom_mailer/email_from_template.json?key=<YOUR APP APP KEY>&pretty_json=true

            Example JSON response:

                {
                  "meta": {
                    "status": "ok",
                    "code": 200,
                    "method_name": "emailFromTemplate"
                  }
                }

      - platform: ios
        example: |
            Example iOS APS SDK call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                      @"template": @"welcome",
                      @"recipients": @"joe@company.com"
                };
                
                [APSEmails send:data withBlock:^(APSResponse *e) {
                      if (e.success) {
                          [[[UIAlertView alloc] initWithTitle:@"Great" message:@"Success!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      } else {
                          [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:@"welcome", @"template", @"joe@company.com", @"recipients", nil ];
                CCRequest *request = [[[CCRequest alloc] initWithDelegate:self httpMethod:@"GET" baseUrl:@"custom_mailer/email_from_template.json" paramDict:paramDict] autorelease];
                [request startAsynchronous];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                    if ([response.meta.method isEqualToString:@"emailFromTemplate"]) {
                        NSLog(@"Email from template sent!");
                    }
                }


      - platform: android
        example: |
            Example Android APS SDK call:

                APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');
                final Activity currentActivity = this;

                HashMap<String, Object> data = new HashMap<String, Object>();
                data.put("recipients", "joe@company.com");
                data.put("template", "welcome");

                try {
                    APSEmails.send(data, new APSResponseHandler() {

                        @Override
                        public void onResponse(final APSResponse e) {
                            if (e.getSuccess()) {
                                new AlertDialog.Builder(currentActivity)
                                .setTitle("Alert").setMessage("Sent!")
                                .setPositiveButton(android.R.string.ok, null)
                                .setIcon(android.R.drawable.ic_dialog_info)
                                .show();
                            } else {
                                Log.e("APSEmail", "ERROR: " + e.getMessage());
                            }
                        }

                        @Override
                        public void onException(final APSCloudException e) {
                            Log.e("APSEmails", "Exception thrown: " + e.toString());
                        }
                    });
                } catch (APSCloudException e) {
                    Log.e("APSEmails", "Exception thrown: " + e.toString());
                }


      - platform: android-acssdk
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("recipients", "joe@company.com");
                data.put("template", "welcome");
                CCResponse response = sdk.sendRequest("custom_mailer/email_from_template.json", CCRequestMethod.POST, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "emailFromTemplate".equals(meta.getMethod())) {
                  ...
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  recipients: 'joe@company.com',
                  template: 'welcome'
                };
                sdk.sendRequest('custom_mailer/email_from_template.json', 'POST', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'emailFromTemplate') {
                        ...
                      }
                    }
                  }
                }

