name: Events
methods:
  - name: show_occurrences
    summary: Show Event Occurrences
    description: |
        Show the event occurrences of an event with the given `event_id`.
        
    url: events/show/occurrences.json

    parameters:
      - name: event_id
        description: ID of the event to show occurrences of.
        type: String
        required: true

      - name: page  
        description: Request page number, default is 1.
        type: Number
      
      - name: per_page
        description: Number of results per page, default is 10.
        type: Number

      - name: response_json_depth
        description: |
            Nested object depth level counts in response json.  
            In order to reduce server API calls from an applicaton, the response json may
            include not just the objects that are being queried/searched, but also with
            some important data related to the returning objects such as object's owner or
            referencing objects.  

            Default is 3, valid range is 1 to 8.
        type: Number

    response-params:
      - name: event_occurences
        description: |
            An array of event occurrence objects, where each occurrence is represented by
            three properties:

            *   `start_time`: `Date`. Start time for the occurrence.
            *   `end_time`: `Date`. End time for the occurrence.
            *   `event`: `Events`. The event object associated with this occurrence. 

            Since the event information will be the same for each occurrence, you can omit
            this information by setting `response_json_depth` to 1.

        type: Array<Hash>

    examples:
      - platform: titanium
        example: |
            This example retrieves information about an event's occurrences and checks the response.
    
                Cloud.Events.showOccurrences({
                    event_id: savedEventId
                }, function (e) {
                    if (e.success) {
                        alert('Success:\n' +
                            'Count: ' + e.event_occurrences.length);
                        for (var i = 0; i < e.event_occurrences.length; i++) {
                            var event = e.event_occurrences[i].event;
                            alert('id: ' + event.id + '\n' +
                                  'name: ' + event.name + '\n' +
                                  'start time: ' + event.start_time + '\n' +
                                  'updated_at: ' + place.updated_at);
                        }
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });
    
      - platform: rest
        example: |
            Example cURL request:
            
                $ curl -b cookies.txt -c cookies.txt "https://api.cloud.appcelerator.com/v1/events/show/occurrences.json?key=<YOUR APP APP KEY>&event;_id=4d870f8bd0afbe1074000017"
                
            Example JSON response:
            
                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"showEventOccurrences",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1,
                    "total_results": 1
                  },
                  "response": {
                    "event_occurrences": [
                      {
                        "start_time": "2011-03-22T20:59:50+0000",
                        "end_time": "2011-03-22T21:59:50+0000",
                        "event": {
                          "id": "4e932f74ad44939896000054",
                          "name": "Appcelerator Cloud Services",
                          "start_time": "2011-03-22T20:59:50+0000",
                          "duration": 3600,
                          "created_at": "2012-01-31T04:52:02+0000",
                          "updated_at": "2012-01-31T04:52:02+0000",
                          "ical": "DTSTART:20110322T205950Z\nDURATION:PT1H\nRRULE:FREQ=DAILY;COUNT=3",
                          "recurring": "daily",
                          "recurring_count": 3,
                          "recurring_until": "2011-03-26T20:59:50+0000",
                          "num_occurrences": 3,
                          "details": "food",
                          "user": {
                            "id":"4d7e6493d0afbe01d8000001",
                            "first_name":"Michael",
                            "last_name":"Goff",
                            "created_at":"2011-03-14T18:55:15+0000",
                            "updated_at":"2011-03-19T05:05:29+0000"
                          },
                          "place": {
                            "id":"4d7e62d6d0afbe04170000a4",
                            "name":"Maya Restaurant",
                            "created_at":"2011-03-14T18:47:50+0000",
                            "updated_at":"2011-03-14T18:47:50+0000",
                            "address":"303 2nd Street",
                            "city":"San Francisco",
                            "state":"CA",
                            "country":"United States",
                            "phone":"(415) 543-2928",
                            "latitude":37.784732,
                            "longitude":-122.395441
                          }
                        }
                      }
                    ]
                  }	
                }
                
      - platform: ios
        example: |
            Example iOS call:
            
                NSDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:(CCEvent *)event.objectId, @"event_id", nil];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"GET" baseUrl:@"events/show/occurrences.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];
                
            SDK Callback:
            
                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.method isEqualToString:@"showEventOccurrences"]) {
                		NSArray *occurrences = [response getObjectsOfType:[CCEventOccurrence class]];
                	}
                }
                
      - platform: android
        example: |
            Example Android call:
            
                Cocoafish sdk = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //Cocoafish sdk = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                Map<String, Object> data = new HashMap<String, Object>();
                data.put("event_id", "4d870f8bd0afbe1074000017");
                CCResponse response = sdk.sendRequest("events/show/occurrences.json", CCRequestMethod.GET, data);
                
            SDK Callback:
            
                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus()) 
                    && meta.getCode() == 200 
                    && "showEventOccurrences".equals(meta.getMethod())) {
                  JSONArray eventOccurrences = responseJSON.getJSONArray("event_occurrences");
                  ...
                }
                
      - platform: javascript
        example: |
            Example Javascript call:
            
                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  event_id: '4d870f8bd0afbe1074000017'
                };
                sdk.sendRequest('events/show/occurrences.json', 'GET', data, callback);
                
            SDK Callback:
            
                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' 
                          && meta.code == 200 
                          && meta.method_name == 'showEventOccurrences') {
                        var eventOccurrences = data.response.event_occurrences;
                      	...
                      }
                    }
                  }
                }
                
      - platform: actionscript
        example: |
            Example Actionscript call:
            
                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret
                
                var data:Object = new Object();
                data.event_id = "4d870f8bd0afbe1074000017";
                sdk.sendRequest("events/show/occurrences.json", URLRequestMethod.GET, data, false, callback);
                
            SDK Callback:
            
                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" 
                          && meta.code == 200 
                          && meta.method_name == "showEventOccurrences") {
                      	var eventOccurrences:Array = data.response.event_occurrences;
                      	...
                      }
                    }
                  }
                }
                
