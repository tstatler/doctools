name: Events
methods:
  - name: delete
    summary: Delete an Event
    description: |
        Delete the event with the given `id`. Only the original submitter can delete
        the event.

        Application Admin can delete any Event object.
    url: events/delete.json
    http-method: DELETE
    login-required: true

    parameters:

      - name: event_id
        description: ID of the event to delete.
        type: String
        required: true

      - name: user_id
        description: |
            User to delete the Event object on behalf of. The user must be the creator of the object.

            The current user must be an application admin to delete an Event object on
            behalf of another user.
        type: String

      - name: pretty_print
        description: | 
            Determines if the JSON response is formatted for readability (`true`), or displayed on a
            single line (`false`). Default is `false`.
        type: Boolean        

    examples:
      - platform: titanium
        example: |
            This example deletes a event and checks the response.

                Cloud.Events.remove({
                    event_id: savedEventId
                }, function (e) {
                    if (e.success) {
                        alert('Removed');
                    } else {
                        alert('Error:\n' +
                            ((e.error && e.message) || JSON.stringify(e)));
                    }
                });

      - platform: rest
        example: |
            Example cURL request:

                $ curl -b cookies.txt -c cookies.txt -X DELETE "https://api.cloud.appcelerator.com/v1/events/delete.json?key=<YOUR APP APP KEY>&pretty_print=true&event_id=4d86d26ed0afbe107400000f"

            Example JSON response:

                {
                  "meta": {
                    "status":"ok",
                    "code":200,
                    "method_name":"deleteEvent"
                  }
                }

      - platform: ios
        example: |
            Example iOS APS SDK call:

                // Create dictionary of parameters to be passed with the request
                NSDictionary *data = @{
                      @"event_id": savedEventId
                };
                
                [APSEvents remove:data withBlock:^(APSResponse *e) {
                      if (e.success) {
                          [[[UIAlertView alloc] initWithTitle:@"Great" message:@"Success!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      } else {
                          [[[UIAlertView alloc] initWithTitle:@"Error" message:e.errorMessage delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil] show];
                      }
                }];

      - platform: ios-acssdk
        example: |
            Example iOS call:

                NSDictionary *paramDict = [NSDictionary dictionaryWithObjectsAndKeys:(CCEvent *)event.objectId, @"event_id", nil];
                CCRequest *request = [[CCRequest alloc] initWithDelegate:self httpMethod:@"DELETE" baseUrl:@"events/delete.json" paramDict:paramDict];
                [request startAsynchronous];
                [request release];

            SDK Callback:

                -(void)ccrequest:(CCRequest *)request didSucceed:(CCResponse *)response
                {
                	if ([response.meta.method isEqualToString:@"deleteEvent"]) {
                		NSLog(@"Event deleted!");
                	}
                }

      - platform: android
        example: |
            Example Android call:

                ACSClient sdk = new ACSClient("<YOUR APP APP KEY>"); // app key
                //ACSClient sdk = new ACSClient("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                Map<String, Object> data = new HashMap<String, Object>();
                data.put("event_id", "4d7e62d6d0afbe04170000a4");
                CCResponse response = sdk.sendRequest("events/delete.json", CCRequestMethod.DELETE, data);

            SDK Callback:

                JSONObject responseJSON = response.getResponseData();
                CCMeta meta = response.getMeta();
                if("ok".equals(meta.getStatus())
                    && meta.getCode() == 200
                    && "deleteEvent".equals(meta.getMethod())) {
                  System.out.println("Event deleted!");
                }

      - platform: javascript
        example: |
            Example Javascript call:

                var sdk = new Cocoafish('<YOUR APP APP KEY>');  // app key
                var data = {
                  event_id: '4d7e62d6d0afbe04170000a4'
                };
                sdk.sendRequest('events/delete.json', 'DELETE', data, callback);

            SDK Callback:

                function callback(data) {
                  if(data) {
                    if(data.meta) {
                      var meta = data.meta;
                      if(meta.status == 'ok' && meta.code == 200 && meta.method_name == 'deleteEvent') {
                        alert("Event deleted!");
                      }
                    }
                  }
                }

      - platform: actionscript
        example: |
            Example Actionscript call:

                var sdk:Cocoafish = new Cocoafish("<YOUR APP APP KEY>"); // app key
                //var sdk:Cocoafish = new Cocoafish("<OAuth Key>", "<OAuth Secret>"); // OAuth key & secret

                var data:Object = new Object();
                data.event_id = "4d86d26ed0afbe107400000f";
                sdk.sendRequest("events/delete.json", URLRequestMethod.DELETE, data, false, callback);

            SDK Callback:

                function callback(data:Object):void {
                  if(data) {
                    if(data.hasOwnProperty("meta")) {
                      var meta:Object = data.meta;
                      if(meta.status == "ok" && meta.code == 200 && meta.method_name == "deleteEvent") {
                      	Alert.show("Event deleted!");
                      }
                    }
                  }
                }

